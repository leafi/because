rm -rf tmp
mkdir tmp

echo compiling kernel bits

echo kernel.c
gcc -m64 -o tmp/kernel.o -c kernel.c -Wall -Wextra -nostdlib -nostartfiles -nodefaultlibs -nostdinc -ffreestanding || exit
echo pci.c
gcc -m64 -o tmp/pci.o -c pci.c -Wall -Wextra -nostdlib -nostartfiles -nodefaultlibs -nostdinc -ffreestanding || exit

nasm -f elf64 -o tmp/bits.o bits.asm || exit

echo linking flat 64bit kernel binary
ld -T linker64.ld -o tmp/kernel64.sys tmp/kernel.o tmp/bits.o tmp/pci.o || exit

echo composing disk image
rm -rf disk.img
cp pure64/Pure64.img disk.img
echo attaching >boring.log
sudo mkdir /mnt/because
sudo mount -t vfat disk.img -o loop,offset=32256 /mnt/because >>boring.log || exit
sudo cp tmp/kernel64.sys /mnt/because/kernel64.sys
echo detaching >>boring.log
sudo umount /mnt/because >>boring.log || exit

echo creating image for virtualbox
rm -rf disk.vdi
echo converting image using vboxmanage >>boring.log
VBoxManage convertfromraw disk.img disk.vdi --uuid '{4c2c12cf-ee32-4a37-afe9-8a4bd88abbca}' >>boring.log

echo done. starting vm

VBoxManage controlvm because poweroff >>boring.log

sleep 1
echo starting vm >>boring.log
VBoxManage startvm because >>boring.log

